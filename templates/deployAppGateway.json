{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Small unique string."
      },
      "minLength": 2,
      "maxLength": 5
    },
    "subnetId": {
      "type": "string",
      "metadata": {
        "Description": "The Subnet Id to use for the Gateway"
      }
    },
    "siteName": {
      "type": "string",
      "metadata": {
        "Description": "The Default Web Site to balance to."
      }
    }
  },
  "variables": {
    "gatewayName": "[concat(parameters('prefix'), '-appgateway')]",
    "gatewayId": "[resourceId('Microsoft.Network/applicationGateways', variables('gatewayName'))]",
    "gatewayIpName": "[concat(variables('gatewayName'), '-ip')]",
    "gatewayIpId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('gatewayIpName'))]"
  },
  "resources": [
    {
      "comments": "## VPN Gateway Public IP ##",
      "name": "[variables('gatewayIpName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2017-06-01",
      "name": "[variables('gatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "Standard_Small",
          "tier": "Standard",
          "capacity": 1
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[parameters('subnetId')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendPublicIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('gatewayIpId')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGatewayFrontendPort",
            "properties": {
              "Port": "80"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPool",
            "properties": {
              "BackendAddresses": [
                {
                  "IpAddress": "[concat(parameters('siteName'), '.azurewebsites.net')]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "provisioningState": "Succeeded",
              "port": 80,
              "protocol": "Http",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": true,
              "requestTimeout": 30,
              "ProbeEnabled": "true",
              "Probe": {
                "id": "[concat(variables('gatewayId'), '/probes/probe-web')]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpListener",
            "properties": {
              "provisioningState": "Succeeded",
              "frontendIPConfiguration": {
                "id": "[concat(variables('gatewayId'), '/frontendIPConfigurations/appGatewayFrontendPublicIP')]"
              },
              "frontendPort": {
                "id": "[concat(variables('gatewayId'), '/frontendPorts/appGatewayFrontendPort80')]"
              },
              "protocol": "Http",
              "requireServerNameIndication": false
            }
          }
        ],
        "probes": [
          {
            "Name": "probe-web",
            "properties": {
              "Protocol": "Http",
              "Path": "/index.html",
              "Interval": 30,
              "Timeout": 10,
              "UnhealthyThreshold": 3,
              "MinServers": 0,
              "PickHostNameFromBackendHttpSettings": true
            }
          }
        ],
        "requestRoutingRules": [
          {
            "name": "rule1",
            "properties": {
              "provisioningState": "Succeeded",
              "ruleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('gatewayId'), '/httpListeners/appGatewayHttpListener')]"
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": {}
}